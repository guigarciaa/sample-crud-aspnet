version: '3.2'

services:
  sample_crud_app1:
    image: ${DOCKER_REGISTRY-}app
    container_name: sample_crud
    build:
        context: ../app
        dockerfile: .
    ports:
      - "5261:80"
    depends_on:
      - db
    restart: always
    networks:
      - host
    environment: 
        - DBHOST=database
        - ASPNETCORE_ENVIRONMENT=Development
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.5GB'
      
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: admin
      POSTGRES_DB: sample_crud_db
    volumes:
      - ./db/context.sql:/docker-entrypoint-initdb.d/context.sql
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.5GB'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - host
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.5GB'

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/datasource:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards/:/etc/grafana/provisioning/dashboards/
    depends_on:
      - prometheus
    networks:
      - host

networks:
  host:
    driver: bridge
